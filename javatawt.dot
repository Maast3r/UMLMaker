digraph G{
	fontname = "Bitstream Vera Sans"
	fontsize = 16

node [
	fontname = "Bitstream Vera Sans"
	fontsize = 16

 shape = "record"
]
edge [
	fontname = "Bitstream Vera Sans"
	fontsize = 16
]
Container [ 
center=true
    label="{Container|modalAppContext: AppContext \l-static log: PlatformLogger \l-static EMPTY_ARRAY: Component[] \lstatic INCLUDE_SELF: boolean \l-static mixingLog: PlatformLogger \l-numOfHWComponents: int \l-static isJavaAwtSmartInvalidate: boolean \lmodalComp: Component \l-static serialVersionUID: long \l-static eventLog: PlatformLogger \l-printingThreads: Set \llayoutMgr: LayoutManager \l-dispatcher: LightweightDispatcher \lcontainerListener: ContainerListener \ldescendantsCount: int \llisteningChildren: int \l-numOfLWComponents: int \l-printing: boolean \llisteningBoundsChildren: int \l-static serialPersistentFields: ObjectStreamField[] \l-component: List \l-focusTraversalPolicy: FocusTraversalPolicy \lstatic SEARCH_HEAVYWEIGHTS: boolean \l-focusCycleRoot: boolean \lpreserveBackgroundColor: Color \l-focusTraversalPolicyProvider: boolean \l-containerSerializedDataVersion: int \l-static descendUnconditionallyWhenValidating: boolean \l | getOpaqueShape(): Region\lpostProcessKeyEvent(KeyEve): void\l#processEvent(AWTEve): void\l+paint(Graphi): void\l+setLayout(LayoutManag): void\l-addDelicately(Component,Container,i): void\lmixOnValidating(): void\l#paramString(): String\l+removeAll(): void\l-static isRemoveNotifyNeeded(Component,Container,Contain): boolean\l+getMinimumSize(): Dimension\l+getMousePosition(boole): Point\lpostsOldMouseEvents(): boolean\l+getAlignmentY(): float\lcountHierarchyMembers(): int\l+addContainerListener(ContainerListen): void\l-reparentChild(Compone): void\l+getAlignmentX(): float\l-getBottommostComponentIndex(): int\l+setComponentZOrder(Component,i): void\ldecreaseComponentCount(Compone): void\l+\<init\>(): void\l+findComponentAt(Poi): Component\l-readObject(ObjectInputStre): void\l-getListenersCount(int,boole): int\l+minimumSize(): Dimension\lnumListening(lo): int\l+removeContainerListener(ContainerListen): void\lcontainsFocus(): boolean\lisSameOrAncestorOf(Component,boole): boolean\lclearCurrentFocusCycleRootOnHide(): void\l+printComponents(Graphi): void\l+getListeners(Cla): EventListener[]\lupdateGraphicsData(GraphicsConfigurati): boolean\l+getMaximumSize(): Dimension\l-startLWModal(): void\lcanContainFocusOwner(Compone): boolean\l+setFocusTraversalPolicy(FocusTraversalPoli): void\lcreateHierarchyEvents(int,Component,Container,long,boole): int\lfindComponentAtImpl(int,int,boole): Component\lpaintHeavyweightComponents(Graphi): void\l+setFocusTraversalKeys(int,S): void\l-checkAddToSelf(Compone): void\lgetDropTargetEventTarget(int,int,boole): Component\l+applyComponentOrientation(ComponentOrientati): void\l+validate(): void\lvalidateUnconditionally(): void\lmixOnZOrderChanging(int,i): void\l-recursiveShowHeavyweightChildren(): void\l+getInsets(): Insets\lmixOnHiding(boole): void\l-getMouseEventTargetImpl(int,int,boolean,ContainerEventTargetFilter,boolean,boole): Component\l-checkNotAWindow(Compone): void\llightweightPaint(Graphi): void\l-static getChildAt(Component,int,int,boole): Component\l+isValidateRoot(): boolean\l+getPreferredSize(): Dimension\leventEnabled(AWTEve): boolean\l+addNotify(): void\l-recursiveHideHeavyweightChildren(): void\l+setFocusTraversalPolicyProvider(boole): void\linvalidateParent(): void\l+insets(): Insets\l+countComponents(): int\l-getMouseEventTarget(int,int,boolean,ContainerEventTargetFilter,boole): Component\lincreaseComponentCount(Compone): void\l-static initIDs(): void\l-recursiveRelocateHeavyweightChildren(Poi): void\lgetAccessibleAt(Poi): Accessible\ladjustDecendantsOnParent(i): void\l+getFocusTraversalKeys(i): Set\lgetComponentsSync(): Component[]\l-reparentTraverse(ContainerPeer,Contain): void\l+preferredSize(): Dimension\l+getComponents(): Component[]\lgetHeavyweightContainer(): Container\l+setFont(Fo): void\l+doLayout(): void\l+add(Component,Object,i): void\lclearMostRecentFocusOwnerOnHide(): void\l#validateTree(): void\l+setFocusCycleRoot(boole): void\l-writeObject(ObjectOutputStre): void\lgetTraversalRoot(): Container\l-isParentOf(Compone): boolean\ladjustDescendants(i): void\l+list(PrintWriter,i): void\l+deliverEvent(Eve): void\lhasHeavyweightDescendants(): boolean\l+getComponentCount(): int\l+isAncestorOf(Compone): boolean\lproxyEnableEvents(lo): void\l-removeDelicately(Component,Container,i): boolean\l-getTopmostComponentIndex(): int\lgetAccessibleChild(i): Accessible\lmixOnReshaping(): void\llightweightPrint(Graphi): void\l+removeNotify(): void\lisRecursivelyVisibleUpToHeavyweightContainer(): boolean\l+getComponent(i): Component\lgetComponents_NoClientCode(): Component[]\lstatic \<clinit\>(): void\l+locate(int,i): Component\lmixOnShowing(): void\linitializeFocusTraversalKeys(): void\l+getComponentAt(Poi): Component\l+update(Graphi): void\l+isFocusTraversalPolicySet(): boolean\l+isFocusCycleRoot(): boolean\l+getComponentZOrder(Compone): int\l+remove(Compone): void\linvalidateTree(): void\lprintHeavyweightComponents(Graphi): void\lrecursiveSubtractAndApplyShape(Region,int,i): void\l+getLayout(): LayoutManager\l-stopLWModal(): void\l+getContainerListeners(): ContainerListener[]\lrecursiveApplyCurrentShape(int,i): void\l#processContainerEvent(ContainerEve): void\l+isFocusTraversalPolicyProvider(): boolean\lcheckGD(Stri): void\l+addPropertyChangeListener(String,PropertyChangeListen): void\lgetAccessibleChildrenCount(): int\l-findTraversalRoot(): Container\l+transferFocusDownCycle(): void\l#addImpl(Component,Object,i): void\l+areFocusTraversalKeysSet(i): boolean\l+invalidate(): void\ldispatchEventToSelf(AWTEve): void\l+layout(): void\ladjustListeningChildren(long,i): void\l+print(Graphi): void\lcreateChildHierarchyEvents(int,long,boole): void\l+paintComponents(Graphi): void\l-checkAdding(Component,i): void\l+getFocusTraversalPolicy(): FocusTraversalPolicy\lpreProcessKeyEvent(KeyEve): void\lhasLightweightDescendants(): boolean\ldispatchEventImpl(AWTEve): void\l}"color = black
style = filled 
 fillcolor = white
]
Container -> Container[arrowhead = vee, style = dotted]


}